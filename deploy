#!/usr/bin/bash

if [[ $# -ne 1 ]]; then
    echo "usage: $0 <major|minor|patch>" >&2
    exit 1
fi
if [[ -n "$(git status --porcelain)" ]]; then
    echo "working directory is dirty" >&2
    exit 1
fi
version=( $(git describe --tags | sed -e 's/v//' -e 's/\./ /g') )
case "$1" in
    major)
        ((version[0]++))
        ;;
    minor)
        ((version[1]++))
        ;;
    patch)
        ((version[2]++))
        ;;
    *)
        echo 'please provide a valid version in increment' >&2
        exit 1
esac
new_version="v${version[0]}.${version[1]}.${version[2]}"
cat > betanin/version.py  << EOL
# generated by \`deploy\` script
# $(date)

__version__ = '$new_version'
EOL
git commit --all -m "bump to $new_version"
git tag "$new_version"
npm --prefix betanin_client/ run-script build 
NEW_VERSION=$new_version python3 setup.py sdist bdist_wheel
python3 -m twine upload --disable-progress-bar dist/*
